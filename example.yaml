# Example minimal YAML (paste into your ESPHome node)
esphome:
  name: arc-bridge
  friendly_name: ARC Bridge
  includes:
    - components/arc/arc.h
    - components/arc/arc.cpp

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:
  level: VERBOSE

api:
  services:
    - service: arc_start_discovery
    - service: arc_stop_discovery
    - service: arc_query_all

uart:
  id: rs485_bus
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 9600

external_components:
  - source:
      type: local
      path: .

# Instantiate the ARC bus + covers using 'custom' components
# (This trick avoids Python codegen; we wire up in C++ lambdas)
custom_component:
  - lambda: |-
      auto arc = new esphome::arc::ARCComponent();
      arc->set_discovery_on_boot(true);
      arc->set_broadcast_interval_ms(5000);
      arc->set_idle_gap_ms(30);
      arc->set_uart_id(rs485_bus);
      return {arc};

cover:
  - platform: custom
    lambda: |-
      auto *bus = (esphome::arc::ARCComponent *) (App.get_components().back());
      auto *c = new esphome::arc::ARCCover();
      c->set_parent(bus);
      c->set_address("USZ");   // replace with your motor address
      bus->register_cover(c);
      return {c};
    covers:
      - name: "ARC Cover USZ"
